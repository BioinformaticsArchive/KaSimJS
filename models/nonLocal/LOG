Parsing abc.ka...
done
+Self seeding...
+Initialized random number generator with seed 603617299
+ Compiling...
	 -agent signatures
	 -variable declarations
	 -initial conditions
	 -rules
Root A
Root C
	 -observables
	 -perturbations
	 Done
+ Analyzing non local patterns...
+ Building initial simulation state...
	 * Initializing injections...


	 * Initializing variables...
	 * Initializing wake up map for side effects...
	 * Initializing activity tree...
	 * Computing influence map...
A(c),C(a)->A(c!0),C(a!0) -+-> A(b!a.B,c)?
No
A(c),C(a)->A(c!0),C(a!0) -+-> A(b,c!a.C)?
Yes
A(c),C(a)->A(c!0),C(a!0) -+-> B(a,c!b.C)?
No
A(c),C(a)->A(c!0),C(a!0) -+-> A(b,c)?
No
A(c),C(a)->A(c!0),C(a!0) -+-> B(a,c)?
No
A(c),C(a)->A(c!0),C(a!0) -+-> C(a,b)?
No
A(c),C(a)->A(c!0),C(a!0) -+-> A(b!0),B(a!0,c!1),C(b!1)?
No
A(c),C(a)->A(c!0),C(a!0) -+-> A(b!0,c!1),B(a!0,c!2),C(a!1,b!2)?
Yes
A(c),C(a)->A(c!0),C(a!0) -+-> A(c),C(a)?
No
A(c),C(a)->A(c!0),C(a!0) -+-> A(c2),C(a2)?
No
A(c),C(a)->A(c!0),C(a!0) -+-> A(c!a.C)?
Yes
A(c),C(a)->A(c!0),C(a!0) -+-> A(c2!a.C)?
No
A(c2),C(a2)->A(c2!0),C(a2!0) -+-> A(b!a.B,c)?
No
A(c2),C(a2)->A(c2!0),C(a2!0) -+-> A(b,c!a.C)?
No
A(c2),C(a2)->A(c2!0),C(a2!0) -+-> B(a,c!b.C)?
No
A(c2),C(a2)->A(c2!0),C(a2!0) -+-> A(b,c)?
No
A(c2),C(a2)->A(c2!0),C(a2!0) -+-> B(a,c)?
No
A(c2),C(a2)->A(c2!0),C(a2!0) -+-> C(a,b)?
No
A(c2),C(a2)->A(c2!0),C(a2!0) -+-> A(b!0),B(a!0,c!1),C(b!1)?
No
A(c2),C(a2)->A(c2!0),C(a2!0) -+-> A(b!0,c!1),B(a!0,c!2),C(a!1,b!2)?
No
A(c2),C(a2)->A(c2!0),C(a2!0) -+-> A(c),C(a)?
No
A(c2),C(a2)->A(c2!0),C(a2!0) -+-> A(c2),C(a2)?
No
A(c2),C(a2)->A(c2!0),C(a2!0) -+-> A(c!a.C)?
No
A(c2),C(a2)->A(c2!0),C(a2!0) -+-> A(c2!a.C)?
No
A(c!a.C)->A(c) -+-> A(b!a.B,c)?
Yes
A(c!a.C)->A(c) -+-> A(b,c!a.C)?
No
A(c!a.C)->A(c) -+-> B(a,c!b.C)?
No
A(c!a.C)->A(c) -+-> A(b,c)?
Yes
A(c!a.C)->A(c) -+-> B(a,c)?
No
A(c!a.C)->A(c) -+-> C(a,b)?
No
A(c!a.C)->A(c) -+-> A(b!0),B(a!0,c!1),C(b!1)?
No
A(c!a.C)->A(c) -+-> A(b!0,c!1),B(a!0,c!2),C(a!1,b!2)?
No
A(c!a.C)->A(c) -+-> A(c),C(a)?
Yes
A(c!a.C)->A(c) -+-> A(c2),C(a2)?
No
A(c!a.C)->A(c) -+-> A(c!a.C)?
No
A(c!a.C)->A(c) -+-> A(c2!a.C)?
No
A(c2!a.C)->A(c2) -+-> A(b!a.B,c)?
No
A(c2!a.C)->A(c2) -+-> A(b,c!a.C)?
No
A(c2!a.C)->A(c2) -+-> B(a,c!b.C)?
No
A(c2!a.C)->A(c2) -+-> A(b,c)?
No
A(c2!a.C)->A(c2) -+-> B(a,c)?
No
A(c2!a.C)->A(c2) -+-> C(a,b)?
No
A(c2!a.C)->A(c2) -+-> A(b!0),B(a!0,c!1),C(b!1)?
No
A(c2!a.C)->A(c2) -+-> A(b!0,c!1),B(a!0,c!2),C(a!1,b!2)?
No
A(c2!a.C)->A(c2) -+-> A(c),C(a)?
No
A(c2!a.C)->A(c2) -+-> A(c2),C(a2)?
Yes
A(c2!a.C)->A(c2) -+-> A(c!a.C)?
No
A(c2!a.C)->A(c2) -+-> A(c2!a.C)?
No
Done
[**Event 0 (Activity 2.000000)**]
____________________________________________________________
#***[0.709353] Current state***
#0:A_0:[_{}{(9,0),(8,0),(3,0)},b{}{(3,0)},c{}{(8,0),(3,0)},c2{}{(9,0)}]
#1:B_1:[_{}{(4,0)},a{}{(4,0)},c{}{(4,0)}]
#2:C_2:[_{}{(9,1),(8,1),(5,0)},a{}{(8,1),(5,0)},a2{}{(9,1)},b{}{(5,0)}]
#	'a.c' A(c),C(a)->A(c!0),C(a!0) @ 1.000000[upd:1.000000(0.000000)]
#	'a.c2' A(c2),C(a2)->A(c2!0),C(a2!0) @ 1.000000[upd:1.000000(0.000000)]
#	'a..c' A(c!a.C)->A(c) @ 0.000000[upd:0.000000(0.000000)]
#	'a2..c2' A(c2!a.C)->A(c2) @ 0.000000[upd:0.000000(0.000000)]

#Var[0]: 'ab' A(b!a.B,c) has 0 instances
#	CC[0] : na
#Var[1]: 'ac' A(b,c!a.C) has 0 instances
#	CC[0] : na
#Var[2]: 'bc' B(a,c!b.C) has 0 instances
#	CC[0] : na
#Var[3]: 'a' A(b,c) has 1 instances
#	CC[0]#0: [0->0] 
#Var[4]: 'b' B(a,c) has 1 instances
#	CC[0]#0: [0->1] 
#Var[5]: 'c' C(a,b) has 1 instances
#	CC[0]#0: [0->2] 
#Var[6]: 'tri+' A(b!0),B(a!0,c!1),C(b!1) has 0 instances
#	CC[0] : na
#Var[7]: 'closed' A(b!0,c!1),B(a!0,c!2),C(a!1,b!2) has 0 instances
#	CC[0] : na
#Var[8]: 'a.c' A(c),C(a) has 1 instances
#	CC[0]#0: [0->0] 
#	CC[1]#0: [1->2] 
#Var[9]: 'a.c2' A(c2),C(a2) has 1 instances
#	CC[0]#0: [0->0] 
#	CC[1]#0: [1->2] 
#Var[10]: 'a..c' A(c!a.C) has 0 instances
#	CC[0] : na
#Var[11]: 'a2..c2' A(c2!a.C) has 0 instances
#	CC[0] : na
#x[0]: 'k1' 100.000000 
#x[1]: 'k2' 1.000000 
#x[2]: 'k_off' 0.100000 
#x[3]: 'n' 1.000000 
#x[4]: 'mono' 3.000000 
#x[5]: 'bi' 0.000000 
#**********
Drawing a rule... (activity=2.000000) 
Picked rule [8] at random.


Applying binary version of 'a.c' with embedding:
[1->2,0->0]
Negative update as indicated by C#2 site 1
Observable 5 is changed, updating {ALG(4)}
Variable 4 is changed, updating {}
Observable 8 is changed, updating {}
Negative update as indicated by A#0 site 2
Observable 3 is changed, updating {ALG(4)}
Variable 4 is changed, updating {}
Observable 8 is changed, updating {}
Influence map tells me I should look for new injections of var[1]
Trying to embed Var[1] using root 0 at node 0
New embedding: [0->0]
Observable 1 is changed, updating {ALG(5)}
Variable 5 is changed, updating {}
Influence map tells me I should look for new injections of var[7]
Trying to embed Var[7] using root 0 at node 0
No new embedding was found
Influence map tells me I should look for new injections of var[10]
Trying to embed Var[10] using root 0 at node 0
New embedding: [0->0]
Observable 10 is changed, updating {}
Should check intra extensions of embeddings in []
No silenced rule, skipping
Looking for side effect update of non local rules...
CCs {1,0} are merged by the rule and CC[0] is the representative
Exploring into image of CC[0] computed during rule 8 application
{0}
Entering component at node[0]
Found a lift pointing to inj[1,0]
But this is not a unary rule...
Found a lift pointing to inj[9,0]
Adding this injection as a candidate for a new intra
Found a lift pointing to inj[10,0]
But this is not a unary rule...
Exploring into image of CC[1] computed during rule 8 application
{2}
Entering component at node[2]
Found a lift pointing to inj[9,1]
Adding this injection as a candidate for a new intra
Trying to find intra(s) for rule [9]
Should now try perturbations {}
[**Event 1 (Activity 102.100000)**]
#######***[0.717641] Current state***
#0:A_0:[_{}{(10,0),(9,0),(1,0)},b{}{(1,0)},c{}!0{(10,0),(1,0)},c2{}{(9,0)}]
#1:B_1:[_{}{(4,0)},a{}{(4,0)},c{}{(4,0)}]
#2:C_2:[_{}{(9,1)},a{}!0{},a2{}{(9,1)},b{}{}]
#	'a.c' A(c),C(a)->A(c!0),C(a!0) @ 1.000000[upd:0.000000(0.000000)]
#	'a.c2' A(c2),C(a2)->A(c2!0),C(a2!0) @ 101.000000[upd:1.000000(100.000000)]
#	'a..c' A(c!a.C)->A(c) @ 0.100000[upd:0.100000(0.000000)]
#	'a2..c2' A(c2!a.C)->A(c2) @ 0.000000[upd:0.000000(0.000000)]

#Var[0]: 'ab' A(b!a.B,c) has 0 instances
#	CC[0] : na
#Var[1]: 'ac' A(b,c!a.C) has 1 instances
#	CC[0]#0: [0->0] 
#Var[2]: 'bc' B(a,c!b.C) has 0 instances
#	CC[0] : na
#Var[3]: 'a' A(b,c) has 0 instances
#Var[4]: 'b' B(a,c) has 1 instances
#	CC[0]#0: [0->1] 
#Var[5]: 'c' C(a,b) has 0 instances
#Var[6]: 'tri+' A(b!0),B(a!0,c!1),C(b!1) has 0 instances
#	CC[0] : na
#Var[7]: 'closed' A(b!0,c!1),B(a!0,c!2),C(a!1,b!2) has 0 instances
#	CC[0] : na
#Var[8]: 'a.c' A(c),C(a) has 0 instances
#Unary[9]: 'a.c2' A(c2),C(a2) has 1 unary instances
#	 ip#0: [|0:[0->0];1:[1->2]|] 
#Var[9]: 'a.c2' A(c2),C(a2) has 1 instances
#	CC[0]#0: [0->0] 
#	CC[1]#0: [1->2] 
#Var[10]: 'a..c' A(c!a.C) has 1 instances
#	CC[0]#0: [0->0] 
#Var[11]: 'a2..c2' A(c2!a.C) has 0 instances
#	CC[0] : na
#x[0]: 'k1' 100.000000 
#x[1]: 'k2' 1.000000 
#x[2]: 'k_off' 0.100000 
#x[3]: 'n' 1.000000 
#x[4]: 'mono' 1.000000 
#x[5]: 'bi' 1.000000 
#**********
Drawing a rule... (activity=102.100000) 
Picked rule [8] at random.
Clashing in order to correct for overestimation of activity of rule 8
Null (clash or doesn't satisfy constraints)
Should now try perturbations {}
[**Event 2 (Activity 101.100000)**]
#######***[0.720879] Current state***
#0:A_0:[_{}{(10,0),(9,0),(1,0)},b{}{(1,0)},c{}!0{(10,0),(1,0)},c2{}{(9,0)}]
#1:B_1:[_{}{(4,0)},a{}{(4,0)},c{}{(4,0)}]
#2:C_2:[_{}{(9,1)},a{}!0{},a2{}{(9,1)},b{}{}]
#	'a.c' A(c),C(a)->A(c!0),C(a!0) @ 0.000000[upd:0.000000(0.000000)]
#	'a.c2' A(c2),C(a2)->A(c2!0),C(a2!0) @ 101.000000[upd:1.000000(100.000000)]
#	'a..c' A(c!a.C)->A(c) @ 0.100000[upd:0.100000(0.000000)]
#	'a2..c2' A(c2!a.C)->A(c2) @ 0.000000[upd:0.000000(0.000000)]

#Var[0]: 'ab' A(b!a.B,c) has 0 instances
#	CC[0] : na
#Var[1]: 'ac' A(b,c!a.C) has 1 instances
#	CC[0]#0: [0->0] 
#Var[2]: 'bc' B(a,c!b.C) has 0 instances
#	CC[0] : na
#Var[3]: 'a' A(b,c) has 0 instances
#Var[4]: 'b' B(a,c) has 1 instances
#	CC[0]#0: [0->1] 
#Var[5]: 'c' C(a,b) has 0 instances
#Var[6]: 'tri+' A(b!0),B(a!0,c!1),C(b!1) has 0 instances
#	CC[0] : na
#Var[7]: 'closed' A(b!0,c!1),B(a!0,c!2),C(a!1,b!2) has 0 instances
#	CC[0] : na
#Var[8]: 'a.c' A(c),C(a) has 0 instances
#Unary[9]: 'a.c2' A(c2),C(a2) has 1 unary instances
#	 ip#0: [|0:[0->0];1:[1->2]|] 
#Var[9]: 'a.c2' A(c2),C(a2) has 1 instances
#	CC[0]#0: [0->0] 
#	CC[1]#0: [1->2] 
#Var[10]: 'a..c' A(c!a.C) has 1 instances
#	CC[0]#0: [0->0] 
#Var[11]: 'a2..c2' A(c2!a.C) has 0 instances
#	CC[0] : na
#x[0]: 'k1' 100.000000 
#x[1]: 'k2' 1.000000 
#x[2]: 'k_off' 0.100000 
#x[3]: 'n' 1.000000 
#x[4]: 'mono' 1.000000 
#x[5]: 'bi' 1.000000 
#**********
Drawing a rule... (activity=101.100000) 
Picked rule [9] at random.

Applying unary version of 'a.c2' with embedding:
[1->2,0->0]
Negative update as indicated by C#2 site 2
Observable 9 is changed, updating {}
Negative update as indicated by A#0 site 3
Observable 9 is changed, updating {}
Should check intra extensions of embeddings in []
No silenced rule, skipping
No possible side effect update of unary rules because a unary instance was applied
Should now try perturbations {}
[**Event 3 (Activity 1.100000)**]
#######***[1.431665] Current state***
#0:A_0:[_{}{(10,0),(1,0)},b{}{(1,0)},c{}!0{(10,0),(1,0)},c2{}!1{}]
#1:B_1:[_{}{(4,0)},a{}{(4,0)},c{}{(4,0)}]
#2:C_2:[_{}{},a{}!0{},a2{}!1{},b{}{}]
#	'a.c' A(c),C(a)->A(c!0),C(a!0) @ 0.000000[upd:0.000000(0.000000)]
#	'a.c2' A(c2),C(a2)->A(c2!0),C(a2!0) @ 1.000000[upd:0.000000(0.000000)]
#	'a..c' A(c!a.C)->A(c) @ 0.100000[upd:0.100000(0.000000)]
#	'a2..c2' A(c2!a.C)->A(c2) @ 0.000000[upd:0.000000(0.000000)]

#Var[0]: 'ab' A(b!a.B,c) has 0 instances
#	CC[0] : na
#Var[1]: 'ac' A(b,c!a.C) has 1 instances
#	CC[0]#0: [0->0] 
#Var[2]: 'bc' B(a,c!b.C) has 0 instances
#	CC[0] : na
#Var[3]: 'a' A(b,c) has 0 instances
#Var[4]: 'b' B(a,c) has 1 instances
#	CC[0]#0: [0->1] 
#Var[5]: 'c' C(a,b) has 0 instances
#Var[6]: 'tri+' A(b!0),B(a!0,c!1),C(b!1) has 0 instances
#	CC[0] : na
#Var[7]: 'closed' A(b!0,c!1),B(a!0,c!2),C(a!1,b!2) has 0 instances
#	CC[0] : na
#Var[8]: 'a.c' A(c),C(a) has 0 instances
#Unary[9]: 'a.c2' A(c2),C(a2) has 0 unary instances
#Var[9]: 'a.c2' A(c2),C(a2) has 0 instances
#Var[10]: 'a..c' A(c!a.C) has 1 instances
#	CC[0]#0: [0->0] 
#Var[11]: 'a2..c2' A(c2!a.C) has 0 instances
#	CC[0] : na
#x[0]: 'k1' 100.000000 
#x[1]: 'k2' 1.000000 
#x[2]: 'k_off' 0.100000 
#x[3]: 'n' 1.000000 
#x[4]: 'mono' 1.000000 
#x[5]: 'bi' 1.000000 
#**********
Drawing a rule... (activity=1.100000) 
Picked rule [9] at random.
Clashing in order to correct for overestimation of activity of rule 9
Null (clash or doesn't satisfy constraints)
Should now try perturbations {}
[**Event 4 (Activity 0.100000)**]
#######***[20.411650] Current state***
#0:A_0:[_{}{(10,0),(1,0)},b{}{(1,0)},c{}!0{(10,0),(1,0)},c2{}!1{}]
#1:B_1:[_{}{(4,0)},a{}{(4,0)},c{}{(4,0)}]
#2:C_2:[_{}{},a{}!0{},a2{}!1{},b{}{}]
#	'a.c' A(c),C(a)->A(c!0),C(a!0) @ 0.000000[upd:0.000000(0.000000)]
#	'a.c2' A(c2),C(a2)->A(c2!0),C(a2!0) @ 0.000000[upd:0.000000(0.000000)]
#	'a..c' A(c!a.C)->A(c) @ 0.100000[upd:0.100000(0.000000)]
#	'a2..c2' A(c2!a.C)->A(c2) @ 0.000000[upd:0.000000(0.000000)]

#Var[0]: 'ab' A(b!a.B,c) has 0 instances
#	CC[0] : na
#Var[1]: 'ac' A(b,c!a.C) has 1 instances
#	CC[0]#0: [0->0] 
#Var[2]: 'bc' B(a,c!b.C) has 0 instances
#	CC[0] : na
#Var[3]: 'a' A(b,c) has 0 instances
#Var[4]: 'b' B(a,c) has 1 instances
#	CC[0]#0: [0->1] 
#Var[5]: 'c' C(a,b) has 0 instances
#Var[6]: 'tri+' A(b!0),B(a!0,c!1),C(b!1) has 0 instances
#	CC[0] : na
#Var[7]: 'closed' A(b!0,c!1),B(a!0,c!2),C(a!1,b!2) has 0 instances
#	CC[0] : na
#Var[8]: 'a.c' A(c),C(a) has 0 instances
#Unary[9]: 'a.c2' A(c2),C(a2) has 0 unary instances
#Var[9]: 'a.c2' A(c2),C(a2) has 0 instances
#Var[10]: 'a..c' A(c!a.C) has 1 instances
#	CC[0]#0: [0->0] 
#Var[11]: 'a2..c2' A(c2!a.C) has 0 instances
#	CC[0] : na
#x[0]: 'k1' 100.000000 
#x[1]: 'k2' 1.000000 
#x[2]: 'k_off' 0.100000 
#x[3]: 'n' 1.000000 
#x[4]: 'mono' 1.000000 
#x[5]: 'bi' 1.000000 
#**********
Drawing a rule... (activity=0.100000) 
Picked rule [10] at random.
Applying ambig. version of 'a..c' with embedding:
[0->0]
Negative update as indicated by A#0 site 2
Observable 1 is changed, updating {ALG(5)}
Variable 5 is changed, updating {}
Observable 10 is changed, updating {}
Negative update as indicated by C#2 site 1
Influence map tells me I should look for new injections of var[0]
Trying to embed Var[0] using root 0 at node 0
No new embedding was found
Influence map tells me I should look for new injections of var[3]
Trying to embed Var[3] using root 0 at node 0
reusing injection: [0->0]
New embedding: [0->0]
Observable 3 is changed, updating {ALG(4)}
Variable 4 is changed, updating {}
Influence map tells me I should look for new injections of var[8]
Trying to embed Var[8] using root 0 at node 0
reusing injection: [0->0]
New embedding: [0->0]
Observable 8 is changed, updating {}
Side effect on node 2 forces me to look for new embedding...
Trying to embed Var[5] using root 0 at node 2
reusing injection: [0->2]
New embedding: [0->2]
Observable 5 is changed, updating {ALG(4)}
Variable 4 is changed, updating {}
Trying to embed Var[8] using root 1 at node 2
reusing injection: [1->2]
New embedding: [1->2]
Observable 8 is changed, updating {}
Should check intra extensions of embeddings in [(8,1,0);(8,0,0)]

Trying to extend (8,1) : [1->2] with:
(8,0):[(8,0,0)]
new_intras: [1->(8,1,0),0->(8,0,0)]

Trying to extend (8,0) : [0->0] with:
(8,1):[(8,1,0)]
new_intras: [1->(8,1,0),0->(8,0,0)]
No silenced rule, skipping
Looking for side effect update of non local rules...
Should now try perturbations {}
[**Event 5 (Activity 1.100000)**]
#######***[20.523041] Current state***
#0:A_0:[_{}{(8,0),(3,0)},b{}{(3,0)},c{}{(8,0),(3,0)},c2{}!0{}]
#1:B_1:[_{}{(4,0)},a{}{(4,0)},c{}{(4,0)}]
#2:C_2:[_{}{(8,1),(5,0)},a{}{(8,1),(5,0)},a2{}!0{},b{}{(5,0)}]
#	'a.c' A(c),C(a)->A(c!0),C(a!0) @ 1.000000[upd:1.000000(0.000000)]
#	'a.c2' A(c2),C(a2)->A(c2!0),C(a2!0) @ 0.000000[upd:0.000000(0.000000)]
#	'a..c' A(c!a.C)->A(c) @ 0.100000[upd:0.000000(0.000000)]
#	'a2..c2' A(c2!a.C)->A(c2) @ 0.000000[upd:0.000000(0.000000)]

#Var[0]: 'ab' A(b!a.B,c) has 0 instances
#	CC[0] : na
#Var[1]: 'ac' A(b,c!a.C) has 0 instances
#Var[2]: 'bc' B(a,c!b.C) has 0 instances
#	CC[0] : na
#Var[3]: 'a' A(b,c) has 1 instances
#	CC[0]#0: [0->0] 
#Var[4]: 'b' B(a,c) has 1 instances
#	CC[0]#0: [0->1] 
#Var[5]: 'c' C(a,b) has 1 instances
#	CC[0]#0: [0->2] 
#Var[6]: 'tri+' A(b!0),B(a!0,c!1),C(b!1) has 0 instances
#	CC[0] : na
#Var[7]: 'closed' A(b!0,c!1),B(a!0,c!2),C(a!1,b!2) has 0 instances
#	CC[0] : na
#Var[8]: 'a.c' A(c),C(a) has 1 instances
#	CC[0]#0: [0->0] 
#	CC[1]#0: [1->2] 
#Unary[9]: 'a.c2' A(c2),C(a2) has 0 unary instances
#Var[9]: 'a.c2' A(c2),C(a2) has 0 instances
#Var[10]: 'a..c' A(c!a.C) has 0 instances
#Var[11]: 'a2..c2' A(c2!a.C) has 0 instances
#	CC[0] : na
#x[0]: 'k1' 100.000000 
#x[1]: 'k2' 1.000000 
#x[2]: 'k_off' 0.100000 
#x[3]: 'n' 1.000000 
#x[4]: 'mono' 3.000000 
#x[5]: 'bi' 0.000000 
#**********
Drawing a rule... (activity=1.100000) 
Picked rule [8] at random.

Clashing because selected instance of n-nary rule is not totally disjoint
Rule [8] is clashing
Null (clash or doesn't satisfy constraints)
Should now try perturbations {}
[**Event 6 (Activity 1.100000)**]
#######***[21.052075] Current state***
#0:A_0:[_{}{(8,0),(3,0)},b{}{(3,0)},c{}{(8,0),(3,0)},c2{}!0{}]
#1:B_1:[_{}{(4,0)},a{}{(4,0)},c{}{(4,0)}]
#2:C_2:[_{}{(8,1),(5,0)},a{}{(8,1),(5,0)},a2{}!0{},b{}{(5,0)}]
#	'a.c' A(c),C(a)->A(c!0),C(a!0) @ 1.000000[upd:1.000000(0.000000)]
#	'a.c2' A(c2),C(a2)->A(c2!0),C(a2!0) @ 0.000000[upd:0.000000(0.000000)]
#	'a..c' A(c!a.C)->A(c) @ 0.100000[upd:0.000000(0.000000)]
#	'a2..c2' A(c2!a.C)->A(c2) @ 0.000000[upd:0.000000(0.000000)]

#Var[0]: 'ab' A(b!a.B,c) has 0 instances
#	CC[0] : na
#Var[1]: 'ac' A(b,c!a.C) has 0 instances
#Var[2]: 'bc' B(a,c!b.C) has 0 instances
#	CC[0] : na
#Var[3]: 'a' A(b,c) has 1 instances
#	CC[0]#0: [0->0] 
#Var[4]: 'b' B(a,c) has 1 instances
#	CC[0]#0: [0->1] 
#Var[5]: 'c' C(a,b) has 1 instances
#	CC[0]#0: [0->2] 
#Var[6]: 'tri+' A(b!0),B(a!0,c!1),C(b!1) has 0 instances
#	CC[0] : na
#Var[7]: 'closed' A(b!0,c!1),B(a!0,c!2),C(a!1,b!2) has 0 instances
#	CC[0] : na
#Var[8]: 'a.c' A(c),C(a) has 1 instances
#	CC[0]#0: [0->0] 
#	CC[1]#0: [1->2] 
#Unary[9]: 'a.c2' A(c2),C(a2) has 0 unary instances
#Var[9]: 'a.c2' A(c2),C(a2) has 0 instances
#Var[10]: 'a..c' A(c!a.C) has 0 instances
#Var[11]: 'a2..c2' A(c2!a.C) has 0 instances
#	CC[0] : na
#x[0]: 'k1' 100.000000 
#x[1]: 'k2' 1.000000 
#x[2]: 'k_off' 0.100000 
#x[3]: 'n' 1.000000 
#x[4]: 'mono' 3.000000 
#x[5]: 'bi' 0.000000 
#**********
Drawing a rule... (activity=1.100000) 
Picked rule [10] at random.
Clashing in order to correct for overestimation of activity of rule 10
Null (clash or doesn't satisfy constraints)
Should now try perturbations {}
[**Event 7 (Activity 1.000000)**]
#######***[21.139684] Current state***
#0:A_0:[_{}{(8,0),(3,0)},b{}{(3,0)},c{}{(8,0),(3,0)},c2{}!0{}]
#1:B_1:[_{}{(4,0)},a{}{(4,0)},c{}{(4,0)}]
#2:C_2:[_{}{(8,1),(5,0)},a{}{(8,1),(5,0)},a2{}!0{},b{}{(5,0)}]
#	'a.c' A(c),C(a)->A(c!0),C(a!0) @ 1.000000[upd:1.000000(0.000000)]
#	'a.c2' A(c2),C(a2)->A(c2!0),C(a2!0) @ 0.000000[upd:0.000000(0.000000)]
#	'a..c' A(c!a.C)->A(c) @ 0.000000[upd:0.000000(0.000000)]
#	'a2..c2' A(c2!a.C)->A(c2) @ 0.000000[upd:0.000000(0.000000)]

#Var[0]: 'ab' A(b!a.B,c) has 0 instances
#	CC[0] : na
#Var[1]: 'ac' A(b,c!a.C) has 0 instances
#Var[2]: 'bc' B(a,c!b.C) has 0 instances
#	CC[0] : na
#Var[3]: 'a' A(b,c) has 1 instances
#	CC[0]#0: [0->0] 
#Var[4]: 'b' B(a,c) has 1 instances
#	CC[0]#0: [0->1] 
#Var[5]: 'c' C(a,b) has 1 instances
#	CC[0]#0: [0->2] 
#Var[6]: 'tri+' A(b!0),B(a!0,c!1),C(b!1) has 0 instances
#	CC[0] : na
#Var[7]: 'closed' A(b!0,c!1),B(a!0,c!2),C(a!1,b!2) has 0 instances
#	CC[0] : na
#Var[8]: 'a.c' A(c),C(a) has 1 instances
#	CC[0]#0: [0->0] 
#	CC[1]#0: [1->2] 
#Unary[9]: 'a.c2' A(c2),C(a2) has 0 unary instances
#Var[9]: 'a.c2' A(c2),C(a2) has 0 instances
#Var[10]: 'a..c' A(c!a.C) has 0 instances
#Var[11]: 'a2..c2' A(c2!a.C) has 0 instances
#	CC[0] : na
#x[0]: 'k1' 100.000000 
#x[1]: 'k2' 1.000000 
#x[2]: 'k_off' 0.100000 
#x[3]: 'n' 1.000000 
#x[4]: 'mono' 3.000000 
#x[5]: 'bi' 0.000000 
#**********
Drawing a rule... (activity=1.000000) 
Picked rule [8] at random.

Clashing because selected instance of n-nary rule is not totally disjoint
Max consecutive clashes reached, I am giving up square approximation at this step

Rule [8]'s activity was corrected to 0.000000
Null (clash or doesn't satisfy constraints)
Should now try perturbations {}
[**Event 8 (Activity 0.000000)**]
?
Simulation ended because a deadlock was reached (Activity = 0.000000)
